--- ../src-base/minecraft/net/minecraft/advancements/AdvancementManager.java
+++ ../src-work/minecraft/net/minecraft/advancements/AdvancementManager.java
@@ -50,8 +50,8 @@
             return Advancement.Builder.deserialize(jsonobject, p_deserialize_3_);
         }
     }).registerTypeAdapter(AdvancementRewards.class, new AdvancementRewards.Deserializer()).registerTypeHierarchyAdapter(ITextComponent.class, new ITextComponent.Serializer()).registerTypeHierarchyAdapter(Style.class, new Style.Serializer()).registerTypeAdapterFactory(new EnumTypeAdapterFactory()).create();
-    private static final AdvancementList ADVANCEMENT_LIST = new AdvancementList();
-    private final File advancementsDir;
+    public static final AdvancementList ADVANCEMENT_LIST = new AdvancementList();
+    public final File advancementsDir;
     private boolean hasErrored;
 
     public AdvancementManager(@Nullable File advancementsDirIn)
@@ -109,7 +109,7 @@
 
                         if (advancement$builder == null)
                         {
-                            LOGGER.error("Couldn't load custom advancement " + resourcelocation + " from " + file1 + " as it's empty or null");
+                            LOGGER.debug("Couldn't load custom advancement " + resourcelocation + " from " + file1 + " as it's empty or null");
                         }
                         else
                         {
@@ -118,12 +118,12 @@
                     }
                     catch (IllegalArgumentException | JsonParseException jsonparseexception)
                     {
-                        LOGGER.error("Parsing error loading custom advancement " + resourcelocation, (Throwable)jsonparseexception);
+                        LOGGER.debug("Parsing error loading custom advancement " + resourcelocation, (Throwable)jsonparseexception);
                         this.hasErrored = true;
                     }
                     catch (IOException ioexception)
                     {
-                        LOGGER.error("Couldn't read custom advancement " + resourcelocation + " from " + file1, (Throwable)ioexception);
+                        LOGGER.debug("Couldn't read custom advancement " + resourcelocation + " from " + file1, (Throwable)ioexception);
                         this.hasErrored = true;
                     }
                 }
@@ -153,7 +153,7 @@
                 {
                     if (!"jar".equals(uri.getScheme()))
                     {
-                        LOGGER.error("Unsupported scheme " + uri + " trying to list all built-in advancements (NYI?)");
+                        LOGGER.debug("Unsupported scheme " + uri + " trying to list all built-in advancements (NYI?)");
                         this.hasErrored = true;
                         return;
                     }
@@ -173,7 +173,11 @@
                         Path path2 = path.relativize(path1);
                         String s = FilenameUtils.removeExtension(path2.toString()).replaceAll("\\\\", "/");
                         ResourceLocation resourcelocation = new ResourceLocation("minecraft", s);
-
+                        // Spigot start
+                        if (org.spigotmc.SpigotConfig.disabledAdvancements != null && (org.spigotmc.SpigotConfig.disabledAdvancements.contains("*") || org.spigotmc.SpigotConfig.disabledAdvancements.contains(resourcelocation.toString()))) {
+                            continue;
+                        }
+                        // Spigot end
                         if (!map.containsKey(resourcelocation))
                         {
                             BufferedReader bufferedreader = null;
@@ -186,12 +190,12 @@
                             }
                             catch (JsonParseException jsonparseexception)
                             {
-                                LOGGER.error("Parsing error loading built-in advancement " + resourcelocation, (Throwable)jsonparseexception);
+                                LOGGER.debug("Parsing error loading built-in advancement " + resourcelocation, (Throwable)jsonparseexception);
                                 this.hasErrored = true;
                             }
                             catch (IOException ioexception)
                             {
-                                LOGGER.error("Couldn't read advancement " + resourcelocation + " from " + path1, (Throwable)ioexception);
+                                LOGGER.debug("Couldn't read advancement " + resourcelocation + " from " + path1, (Throwable)ioexception);
                                 this.hasErrored = true;
                             }
                             finally
@@ -205,12 +209,12 @@
                 return;
             }
 
-            LOGGER.error("Couldn't find .mcassetsroot");
+            LOGGER.debug("Couldn't find .mcassetsroot");
             this.hasErrored = true;
         }
         catch (IOException | URISyntaxException urisyntaxexception)
         {
-            LOGGER.error("Couldn't get a list of all built-in advancement files", (Throwable)urisyntaxexception);
+            LOGGER.debug("Couldn't get a list of all built-in advancement files", (Throwable)urisyntaxexception);
             this.hasErrored = true;
             return;
         }
